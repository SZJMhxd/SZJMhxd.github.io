<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>十早九木のBlog</title>
  
  
  <link href="https://www.szjm.online/atom.xml" rel="self"/>
  
  <link href="https://www.szjm.online/"/>
  <updated>2022-08-14T15:21:12.147Z</updated>
  <id>https://www.szjm.online/</id>
  
  <author>
    <name>十早九木</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>登录的实现</title>
    <link href="https://www.szjm.online/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://www.szjm.online/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-06-05T02:33:23.000Z</published>
    <updated>2022-08-14T15:21:12.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-4-登录"><a href="#1-4-登录" class="headerlink" title="1.4 登录"></a>1.4 登录</h2><h3 id="1-4-1-寻找对应后端"><a href="#1-4-1-寻找对应后端" class="headerlink" title="1.4.1 寻找对应后端"></a>1.4.1 寻找对应后端</h3><h4 id="1-4-1-1-通过开发者工具"><a href="#1-4-1-1-通过开发者工具" class="headerlink" title="1.4.1.1 通过开发者工具"></a>1.4.1.1 通过开发者工具</h4><span id="more"></span><img src="/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/1.4.1.1_1通过开发者工具负载.png"><img src="/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/1.4.1.1_2通过开发者工具标头.png"><img src="/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/1.4.1.1_3通过开发者工具预览.png"><img src="/2022/06/05/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/4.%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/1.4.1.1_4通过开发者工具cookie.png"><p>分别可以看到</p><ul><li><p>请求地址是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/dev-api/login</span><br></pre></td></tr></table></figure></li><li><p>传递的json是</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ac4ccbd519eb4007b603e4c2f22427c5&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>返回的响应是</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;操作成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjBkYzA5MjAwLTM3YjAtNDQ0My04N2Y1LTU1NDEwMjMzYjY1ZiJ9.F7h_9cWQyFejRpAh4trc8nOQ17jeSStG0g3vNm-SPUY0oQOKuM1fpLnLipKUO58bxUsOy-V7QSJ8ivfp4jIVBg&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改了username、rememberMe、password三项cookie</p></li></ul><h4 id="1-4-1-2-查看前端代码"><a href="#1-4-1-2-查看前端代码" class="headerlink" title="1.4.1.2 查看前端代码"></a>1.4.1.2 查看前端代码</h4><p>一共4个表单 分别保存了用户名、密码、验证码答案、记住用户4项，登录按钮是<code>handleLogin</code>方法</p><p>查看<code>handleLogin</code>方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">handleLogin</span>(<span class="string">&quot;&gt; &#123;</span></span><br><span class="line"><span class="string">  this.$refs.loginForm.validate(valid =&gt; &#123;</span></span><br><span class="line"><span class="string">    if (valid&quot;</span>&gt; &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">rememberMe</span><span class="string">&quot;&gt; &#123;</span></span><br><span class="line"><span class="string">        Cookies.set(&quot;</span>username<span class="string">&quot;, this.loginForm.username, &#123; expires: 30 &#125;&quot;</span>&gt;;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;password&quot;</span>, <span class="title function_">encrypt</span>(<span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">password</span><span class="string">&quot;&gt;, &#123; expires: 30 &#125;&quot;</span>&gt;;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;rememberMe&#x27;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">rememberMe</span>, &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;<span class="string">&quot;&gt;;</span></span><br><span class="line"><span class="string">      &#125; else &#123;</span></span><br><span class="line"><span class="string">        Cookies.remove(&quot;</span>username<span class="string">&quot;&quot;</span>&gt;;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;password&quot;</span><span class="string">&quot;&gt;;</span></span><br><span class="line"><span class="string">        Cookies.remove(&#x27;rememberMe&#x27;&quot;</span>&gt;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&quot;Login&quot;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span><span class="string">&quot;&gt;.then((&quot;</span>&gt; =&gt; &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: <span class="variable language_">this</span>.<span class="property">redirect</span> || <span class="string">&quot;/&quot;</span> &#125;<span class="string">&quot;&gt;.catch((&quot;</span>&gt;=&gt;&#123;&#125;<span class="string">&quot;&gt;;</span></span><br><span class="line"><span class="string">      &#125;&quot;</span>&gt;.<span class="title function_">catch</span>((<span class="string">&quot;&gt; =&gt; &#123;</span></span><br><span class="line"><span class="string">        this.loading = false;</span></span><br><span class="line"><span class="string">        if (this.captchaOnOff&quot;</span>&gt; &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">getCode</span>(<span class="string">&quot;&gt;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;&quot;</span>&gt;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="string">&quot;&gt;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>记住用户</p><p>  判断是否勾选了记住用户</p><p>  如果是 保存用户名、密码、记住用户到cookie30天</p><p>  如果没有 从cookie清除这三项</p></li><li><p>登录方法</p><p>  ![1.4.1.2_1查看login方法1](4.登录的实现&#x2F;1.4.1.2_1查看login方法1.png”&gt;</p><p>  ![1.4.1.2_2查看login方法2](4.登录的实现&#x2F;1.4.1.2_2查看login方法2.png”&gt;</p><p>  ![1.4.1.2_3查看login方法3](4.登录的实现&#x2F;1.4.1.2_3查看login方法3.png”&gt;</p><p>  就是把这四项打包成json传到<code>/login</code>方法</p></li></ul><h4 id="1-4-1-3-查看后端代码"><a href="#1-4-1-3-查看后端代码" class="headerlink" title="1.4.1.3 查看后端代码"></a>1.4.1.3 查看后端代码</h4><ul><li><p>找到后端代码</p><p>还是使用在文件中查找的方式搜索<code>/login</code> (Ctrl+Shift+F”&gt;</p><p>![1.4.1.3_1在文件中查找login](4.登录的实现&#x2F;1.4.1.3_1在文件中查找login.png”&gt;</p></li><li><p>打断点确认</p><p>![1.4.1.3_2打断点确认](4.登录的实现&#x2F;1.4.1.3_2打断点确认.png”&gt;</p><p>可以看到<code>loginBody</code>的值</p></li><li><p>判断是否登录成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> loginService.login(loginBody.getUsername(<span class="string">&quot;&gt;, loginBody.getPassword(&quot;</span>&gt;, loginBody.getCode(<span class="string">&quot;&gt;,loginBody.getUuid(&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span><br></pre></td></tr></table></figure><p>通过一个<code>loginService.login</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(String username, String password, String code, String uuid<span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="params">&#123;</span></span></span><br><span class="line"><span class="string"><span class="params">    boolean captchaOnOff = configService.selectCaptchaOnOff(&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    // 验证码开关</span></span><br><span class="line"><span class="params">    <span class="keyword">if</span> (captchaOnOff<span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="params">    &#123;</span></span></span><br><span class="line"><span class="string"><span class="params">        validateCaptcha(username, code, uuid&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">    // 用户验证</span></span><br><span class="line"><span class="params">    Authentication authentication = <span class="literal">null</span>;</span></span><br><span class="line"><span class="params">    <span class="keyword">try</span></span></span><br><span class="line"><span class="params">    &#123;</span></span><br><span class="line"><span class="params">        // 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class="line"><span class="params">        authentication = authenticationManager</span></span><br><span class="line"><span class="params">            .authenticate(new UsernamePasswordAuthenticationToken(username, password<span class="string">&quot;&gt;&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">    <span class="keyword">catch</span> (Exception e<span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="params">    &#123;</span></span></span><br><span class="line"><span class="string"><span class="params">        if (e instanceof BadCredentialsException&quot;</span>&gt;</span></span><br><span class="line"><span class="params">        &#123;</span></span><br><span class="line"><span class="params">            AsyncManager.me(<span class="string">&quot;&gt;.execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(&quot;</span>user.password.not.match<span class="string">&quot;&quot;</span>&gt;<span class="string">&quot;&gt;&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">            throw new UserPasswordNotMatchException(<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="params">        else</span></span></span><br><span class="line"><span class="string"><span class="params">        &#123;</span></span></span><br><span class="line"><span class="string"><span class="params">            AsyncManager.me(&quot;</span>&gt;.execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, e.getMessage(<span class="string">&quot;&gt;&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">            throw new ServiceException(e.getMessage(&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">        &#125;</span></span></span><br><span class="line"><span class="string"><span class="params">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="params">    AsyncManager.me(&quot;</span>&gt;.execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_SUCCESS, MessageUtils.message(<span class="string">&quot;user.login.success&quot;</span><span class="string">&quot;&gt;&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">    LoginUser loginUser = (LoginUser&quot;</span>&gt; authentication.getPrincipal(<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">    recordLoginInfo(loginUser.getUserId(&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">    // 生成token</span></span></span><br><span class="line"><span class="string"><span class="params">    return tokenService.createToken(loginUser&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>首先判断验证码验证是否开启，如果开启去验证验证码</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">validateCaptcha</span><span class="params">(String username, String code, String uuid<span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="params">&#123;</span></span></span><br><span class="line"><span class="string"><span class="params">    String verifyKey = Constants.CAPTCHA_CODE_KEY + StringUtils.nvl(uuid, &quot;</span><span class="string">&quot;&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    String captcha = redisCache.getCacheObject(verifyKey<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">    redisCache.deleteObject(verifyKey&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    <span class="keyword">if</span> (captcha == <span class="literal">null</span><span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="params">    &#123;</span></span></span><br><span class="line"><span class="string"><span class="params">        AsyncManager.me(&quot;</span>&gt;.execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.jcaptcha.expire&quot;</span><span class="string">&quot;&gt;&quot;</span>&gt;<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">        throw new CaptchaExpireException(&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">    <span class="keyword">if</span> (!code.equalsIgnoreCase(captcha<span class="string">&quot;&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="params">    &#123;</span></span><br><span class="line"><span class="params">        AsyncManager.me(<span class="string">&quot;&gt;.execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(&quot;</span>user.jcaptcha.error<span class="string">&quot;&quot;</span>&gt;<span class="string">&quot;&gt;&quot;</span>&gt;;</span></span><br><span class="line"><span class="params">        throw new CaptchaException(<span class="string">&quot;&gt;;</span></span></span><br><span class="line"><span class="string"><span class="params">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="params">&#125;</span></span></span><br></pre></td></tr></table></figure><p>  用固定字段<code>captcha_codes:</code>和<code>uuid</code>生成key</p><p>  从redis获取验证码答案</p><p>  删除答案</p></li><li></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-4-登录&quot;&gt;&lt;a href=&quot;#1-4-登录&quot; class=&quot;headerlink&quot; title=&quot;1.4 登录&quot;&gt;&lt;/a&gt;1.4 登录&lt;/h2&gt;&lt;h3 id=&quot;1-4-1-寻找对应后端&quot;&gt;&lt;a href=&quot;#1-4-1-寻找对应后端&quot; class=&quot;headerlink&quot; title=&quot;1.4.1 寻找对应后端&quot;&gt;&lt;/a&gt;1.4.1 寻找对应后端&lt;/h3&gt;&lt;h4 id=&quot;1-4-1-1-通过开发者工具&quot;&gt;&lt;a href=&quot;#1-4-1-1-通过开发者工具&quot; class=&quot;headerlink&quot; title=&quot;1.4.1.1 通过开发者工具&quot;&gt;&lt;/a&gt;1.4.1.1 通过开发者工具&lt;/h4&gt;</summary>
    
    
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="开源项目学习" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="若依前后端分离版" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88/"/>
    
    <category term="若依" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/tags/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="若依" scheme="https://www.szjm.online/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>验证码的后端实现</title>
    <link href="https://www.szjm.online/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/"/>
    <id>https://www.szjm.online/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-06-04T13:34:57.000Z</published>
    <updated>2022-08-14T15:25:42.990Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-3-1-2-查看Java代码"><a href="#1-3-1-2-查看Java代码" class="headerlink" title="1.3.1.2 查看Java代码"></a>1.3.1.2 查看Java代码</h4><ul><li><p>找到后端代码<span id="more"></span></p><ol><li>后端一共6个模块 其中<code>ruoyi-admin</code>是主要模块 也就是我们启动的模块<img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_1一共6个模块.png"></li><li>现在对于后端的代码还是不了解的，我们使用IDEA的工具搜索</li><li>搜索接口名称<code>captchaImage</code><ol><li>在包名<code>ruoyi-admin</code>上右击 选择<code>在文件中查找</code><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_2选择在文件中查找.png"></li><li>输入接口名<code>captchaImage</code></li><li>发现在<code>CaptchaController</code>的44行</li><li>双击定位到代码位置<img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_3查询功能的使用.png"></li></ol></li></ol></li><li><p>打断点验证</p><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_4打上断点.png"><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_5验证码加载失败.png"><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_6后端检测到断点响应.png"><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_7取消断点后响应成功.png"></li><li><p>分析后端代码</p><ol><li><p>大类前面没有接口注解 保证访问的是我们需要的接口<img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_8没有接口注解.png"></p></li><li><p>创建<code>AjaxResult</code>类</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br></pre></td></tr></table></figure><p>  一层一层点下去</p>  <img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_9Ajax_1.png">  <img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_10Ajax_2.png">  <img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_11Ajax_3.png">  <img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/source\_posts\若依\前后端分离Vue\3.验证码的后端实现\1.3.1.2_12Ajax_4.png"></li><li><p>判断验证是否开启</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">captchaOnOff</span> <span class="operator">=</span> configService.selectCaptchaOnOff();</span><br><span class="line">ajax.put(<span class="string">&quot;captchaOnOff&quot;</span>, captchaOnOff);</span><br><span class="line"><span class="keyword">if</span> (!captchaOnOff)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> ajax;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  如果没有开启 直接return结束</p></li><li><p>保存验证码</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存验证码信息</span></span><br><span class="line"><span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> IdUtils.simpleUUID();</span><br><span class="line"><span class="type">String</span> <span class="variable">verifyKey</span> <span class="operator">=</span> Constants.CAPTCHA_CODE_KEY + uuid;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">capStr</span> <span class="operator">=</span> <span class="literal">null</span>, code = <span class="literal">null</span>;</span><br><span class="line"><span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_13CAPTCHA_CODE_KEY.png"><p>生成UUID，将CAPTCHA_CODE_KEY与UUID拼成新字符串作为Redis的key</p><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_14生成的key.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);</span><br></pre></td></tr></table></figure><p><code>verifyKey</code> captcha_codes： + 生成的UUID</p><p><code>code</code> 刚才那道算术题的答案</p><p><code>Constants.CAPTCHA_EXPIRATION</code> 值为2 就是有效期2分钟</p><img src="/2022/06/04/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/3.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.2_15存储到redis.png"></li><li><p>将验证码保存为图片</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转换流信息写出</span></span><br><span class="line"><span class="type">FastByteArrayOutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastByteArrayOutputStream</span>();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, os);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (IOException e)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  转换成jpg格式的图片</p></li><li><p>传给前端</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ajax.put(<span class="string">&quot;uuid&quot;</span>, uuid);</span><br><span class="line">ajax.put(<span class="string">&quot;img&quot;</span>, Base64.encode(os.toByteArray()));</span><br><span class="line"><span class="keyword">return</span> ajax;</span><br></pre></td></tr></table></figure><p>  将<em>UUID</em>也就是key值和生成的<em>图片</em>传给前端</p></li></ol></li></ul><h4 id="1-3-1-3-综合"><a href="#1-3-1-3-综合" class="headerlink" title="1.3.1.3 综合"></a>1.3.1.3 综合</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">getCodeImg</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">captchaOnOff</span> = res.<span class="property">captchaOnOff</span> === <span class="literal">undefined</span> ? <span class="literal">true</span> : res.<span class="property">captchaOnOff</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">captchaOnOff</span>) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">codeUrl</span> = <span class="string">&quot;data:image/gif;base64,&quot;</span> + res.<span class="property">img</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">uuid</span> = res.<span class="property">uuid</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><ul><li>访问<code>captchaImage</code>接口 判</li><li>断返回的<code>captchaOnOff</code>是否为空 如果为空赋值为true，如果不为空赋值后端返回的值</li><li>如果<code>this.captchaOnOff</code>为真执行后续操作</li><li>后端返回的图片赋值给<code>this.codeUrl</code></li><li>后端返回的UUID赋值给<code> this.loginForm.uuid</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;1-3-1-2-查看Java代码&quot;&gt;&lt;a href=&quot;#1-3-1-2-查看Java代码&quot; class=&quot;headerlink&quot; title=&quot;1.3.1.2 查看Java代码&quot;&gt;&lt;/a&gt;1.3.1.2 查看Java代码&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;找到后端代码&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="开源项目学习" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="若依前后端分离版" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88/"/>
    
    <category term="若依" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/tags/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="若依" scheme="https://www.szjm.online/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>验证码的前端实现</title>
    <link href="https://www.szjm.online/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/"/>
    <id>https://www.szjm.online/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-06-03T03:32:42.000Z</published>
    <updated>2022-08-15T02:46:10.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-3-验证"><a href="#1-3-验证" class="headerlink" title="1.3 验证"></a>1.3 验证</h2><h3 id="1-3-1-生成验证码"><a href="#1-3-1-生成验证码" class="headerlink" title="1.3.1 生成验证码"></a>1.3.1 生成验证码</h3><blockquote><p>基本思路</p></blockquote><ol><li>后端生成一个表达式，1+1&#x3D;2 写成1+1&#x3D;?@2</li><li>其中1+1&#x3D;?转换成图片验证码传到前端</li><li>答案2存入Redis</li><li>前端登录时 将输入框里的内容与Redis进行比对<span id="more"></span><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1_1Redis存储验证码答案.png"></li><li>如果修改Redis里的答案 即使验证码的答案与题目不一致 但是与Redis一致 也能成功登录</li></ol><h4 id="1-3-1-1-查看vue代码-ruoyi-ui-src-views-login-vue"><a href="#1-3-1-1-查看vue代码-ruoyi-ui-src-views-login-vue" class="headerlink" title="1.3.1.1 查看vue代码 ruoyi-ui/src/views/login.vue"></a>1.3.1.1 查看vue代码 <code>ruoyi-ui/src/views/login.vue</code></h4><ul><li><p>验证码是怎么展示的</p><ol><li>验证码应该是在初始化的时候加载的<img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_1初始化的方法.png"></li><li>看名字猜测是getCode<img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_2验证码的展示.png"></li><li>如果访问接口成功 获取图片的地址到<code>this.codeUrl</code>用来展示验证码图片 获取Redis的key值到<code>this.loginForm.uuid</code>用于验证码答案比对</li></ol></li><li><p>前端是怎么调用接口的</p><ol><li>追踪<code>getCodeImg()</code>，显示是从<code>@/api/login</code>引入的<img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_3追踪getCodeImg()1.png"> <img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_4追踪getCodeImg()2.png"></li><li>追踪<code>@/api/login</code>的<code>getCodeImg()</code>，注释表明是这个方法获取的验证码<img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_5注释写明是这个方法.png"><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_6与控制台的请求名称相同.png"></li><li>深入了解发现<code>request()</code>指向<code>@/utils/request</code><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_7追踪request()1.png"><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_8追踪request()2.png"></li><li>查看<code>@/utils/request</code>的<code>request()</code>，看到了<code>axios</code><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_9发现axios.png"><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_10接口注释对应1.png"><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_11接口注释对应2.png"></li></ol></li><li><p><code>Vue</code>的获取图片的请求到底是前端还是后端</p><p>我们看到vue获取验证码图片的地址是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/dev-api/captchaImage</span><br></pre></td></tr></table></figure><p><strong>localhost后面没有跟端口号，也就是默认的80端口。而80是前端的端口号，后端的端口号是8080。</strong></p><p>反向代理 URL请求前端，进行代理，把前端映射到后端，解决跨域问题<br>前端还是在请求前端，所以没有跨越问题，代理将对于前端的请求转发到后端，完成请求</p></li><li><p>代理是在哪里做的</p><img src="/2022/06/03/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/2.%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0/1.3.1.1_12前端反向代理代码.png"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">proxy</span>: &#123;</span><br><span class="line">  <span class="comment">// detail: https://cli.vuejs.org/config/#devserver-proxy</span></span><br><span class="line">  [process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>]: &#123;</span><br><span class="line">    <span class="attr">target</span>: <span class="string">`http://localhost:8080`</span>,</span><br><span class="line">    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">      [<span class="string">&#x27;^&#x27;</span> + process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>]: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong><code>pathRewrite</code> 路径重写</strong></p><p>将VUE_APP_BASE_API的<code>/dev-api</code> 替换成<code>&#39;&#39;</code> 再映射到 <code>http://localhost:8080</code></p><p><a href="http://localhost/dev-api/captchaImage">http://localhost/dev-api/captchaImage</a> 变成 <a href="http://localhost:8080/captchaImage">http://localhost:8080/captchaImage</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-3-验证&quot;&gt;&lt;a href=&quot;#1-3-验证&quot; class=&quot;headerlink&quot; title=&quot;1.3 验证&quot;&gt;&lt;/a&gt;1.3 验证&lt;/h2&gt;&lt;h3 id=&quot;1-3-1-生成验证码&quot;&gt;&lt;a href=&quot;#1-3-1-生成验证码&quot; class=&quot;headerlink&quot; title=&quot;1.3.1 生成验证码&quot;&gt;&lt;/a&gt;1.3.1 生成验证码&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;基本思路&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;后端生成一个表达式，1+1&amp;#x3D;2 写成1+1&amp;#x3D;?@2&lt;/li&gt;
&lt;li&gt;其中1+1&amp;#x3D;?转换成图片验证码传到前端&lt;/li&gt;
&lt;li&gt;答案2存入Redis&lt;/li&gt;
&lt;li&gt;前端登录时 将输入框里的内容与Redis进行比对&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="开源项目学习" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="若依前后端分离版" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88/"/>
    
    <category term="若依" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/tags/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="若依" scheme="https://www.szjm.online/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>运行若依项目</title>
    <link href="https://www.szjm.online/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/"/>
    <id>https://www.szjm.online/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-05-21T10:18:48.000Z</published>
    <updated>2022-08-15T11:23:08.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-若依（前后端分离版）"><a href="#1-若依（前后端分离版）" class="headerlink" title="1. 若依（前后端分离版）"></a>1. 若依（前后端分离版）</h1><h2 id="1-1-什么是若依？"><a href="#1-1-什么是若依？" class="headerlink" title="1.1 什么是若依？"></a>1.1 什么是若依？</h2><p>开源项目 在此基础上二次开发</p><ul><li>学习开源项目的目标：</li></ul><ol><li>直接用，减少自己的工作量</li><li>学习优秀开源项目底层的编程思想，设计思路，提高自己的编程能力</li></ol><ul><li>官网： <a href="http://www.ruoyi.vip/">RuoYi 若依官方网站</a><span id="more"></span></li><li>基础：SpringBoot + Vue</li><li>环境要求：<ol><li>JDK1.8+</li><li>MySQL</li><li>Redis</li><li>Maven</li><li>Vue</li></ol></li></ul><h2 id="1-2-使用若依"><a href="#1-2-使用若依" class="headerlink" title="1.2 使用若依"></a>1.2 使用若依</h2><p>使用开源项目的步骤：</p><ol><li><p>下载并运行</p></li><li><p>看懂业务流程</p></li><li><p>进行二次开发</p></li></ol><h3 id="1-2-1-下载"><a href="#1-2-1-下载" class="headerlink" title="1.2.1 下载"></a>1.2.1 下载</h3><p>若依的项目托管与Gitee，直接从gitee上<code>git clone</code>即可</p><h3 id="1-2-2-配置数据库MySQL、Redis"><a href="#1-2-2-配置数据库MySQL、Redis" class="headerlink" title="1.2.2 配置数据库MySQL、Redis"></a>1.2.2 配置数据库MySQL、Redis</h3><ul><li><p>MySQL</p><ol><li>创建数据库<code>ry-vue</code>并导入数据脚本<code>ry_2021xxxx.sql</code>，<code>quartz.sql</code></li><li>在<code>ruoyi-admin/src/main/resources/application-druid.yml</code>中配置数据库连接</li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.2_1配置数据库连接.png"></li></ol></li><li><p>Redis</p><ol><li>在<code>ruoyi-admin/src/main/resources/application.yml</code>中配置Redis连接</li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.2_2配置Redis连接.png"></li></ol></li></ul><h2 id="1-2-3-运行后端"><a href="#1-2-3-运行后端" class="headerlink" title="1.2.3 运行后端"></a>1.2.3 运行后端</h2><ol><li>运行<code>ruoyi-admin/src/main/java/com/ruoyi/RuoYiApplication.java</code></li><li>启动成功</li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.3_1启动成功.png"></li><li>浏览器访问成功</li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.3_2浏览器访问成功.png"></li></ol><h3 id="1-2-4-运行前端"><a href="#1-2-4-运行前端" class="headerlink" title="1.2.4 运行前端"></a>1.2.4 运行前端</h3><ol><li><p>安装依赖环境 </p></li><li><pre><code class="powershell">npm install --registry=https://registry.npmmirror.com<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">3. 启动服务</span><br><span class="line"></span><br><span class="line">4. ```powershell</span><br><span class="line">   npm run dev</span><br></pre></td></tr></table></figure></code></pre></li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.4_1前端启动成功.png"></li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.4_2浏览器访问成功.png"></li><li><img src="/2022/05/21/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBVue/1.%E8%BF%90%E8%A1%8C%E8%8B%A5%E4%BE%9D%E9%A1%B9%E7%9B%AE/1.2.4_3成功进入系统.png"></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-若依（前后端分离版）&quot;&gt;&lt;a href=&quot;#1-若依（前后端分离版）&quot; class=&quot;headerlink&quot; title=&quot;1. 若依（前后端分离版）&quot;&gt;&lt;/a&gt;1. 若依（前后端分离版）&lt;/h1&gt;&lt;h2 id=&quot;1-1-什么是若依？&quot;&gt;&lt;a href=&quot;#1-1-什么是若依？&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是若依？&quot;&gt;&lt;/a&gt;1.1 什么是若依？&lt;/h2&gt;&lt;p&gt;开源项目 在此基础上二次开发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习开源项目的目标：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;直接用，减少自己的工作量&lt;/li&gt;
&lt;li&gt;学习优秀开源项目底层的编程思想，设计思路，提高自己的编程能力&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;官网： &lt;a href=&quot;http://www.ruoyi.vip/&quot;&gt;RuoYi 若依官方网站&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="开源项目学习" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="若依前后端分离版" scheme="https://www.szjm.online/categories/%E6%A5%A0%E5%93%A5/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88/"/>
    
    <category term="若依" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E8%8B%A5%E4%BE%9D/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="楠哥" scheme="https://www.szjm.online/tags/%E6%A5%A0%E5%93%A5/"/>
    
    <category term="若依" scheme="https://www.szjm.online/tags/%E8%8B%A5%E4%BE%9D/"/>
    
    <category term="前后端分离" scheme="https://www.szjm.online/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>语音播报</title>
    <link href="https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%AF%AD%E9%9F%B3%E6%92%AD%E6%8A%A5/"/>
    <id>https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%AF%AD%E9%9F%B3%E6%92%AD%E6%8A%A5/</id>
    <published>2022-05-09T03:33:22.000Z</published>
    <updated>2022-08-15T02:52:56.002Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语音播报"><a href="#语音播报" class="headerlink" title="语音播报"></a>语音播报</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Python  3.10.4<span id="more"></span><br><img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%AF%AD%E9%9F%B3%E6%92%AD%E6%8A%A5/image-20220509112058574.png">“</li><li>库<ul><li><img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%AF%AD%E9%9F%B3%E6%92%AD%E6%8A%A5/image-20220509112130589.png"></li></ul></li></ul><h3 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h3><p><a href="https://blog.csdn.net/qq_41185868/article/details/84946859">Py之pyttsx：pyttsx&#x2F;pyttsx3的简介、安装、使用方法之详细攻略</a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工具模块</span></span><br><span class="line"><span class="keyword">import</span> pyttsx3 <span class="comment">#导入</span></span><br><span class="line"><span class="comment">#创建  初始化</span></span><br><span class="line">engine = pyttsx3.init()</span><br><span class="line"><span class="comment">#说话</span></span><br><span class="line">engine.say(<span class="string">&#x27;经过广州&#x27;</span>)</span><br><span class="line"><span class="comment">#运行</span></span><br><span class="line">engine.runAndWait()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;语音播报&quot;&gt;&lt;a href=&quot;#语音播报&quot; class=&quot;headerlink&quot; title=&quot;语音播报&quot;&gt;&lt;/a&gt;语音播报&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Python  3.10.4&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://www.szjm.online/categories/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/categories/Python/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Python" scheme="https://www.szjm.online/tags/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>运动抓拍</title>
    <link href="https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/"/>
    <id>https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/</id>
    <published>2022-05-09T03:31:47.000Z</published>
    <updated>2022-08-15T02:56:05.848Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运动抓拍"><a href="#运动抓拍" class="headerlink" title="运动抓拍"></a>运动抓拍</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Python  3.10.4<span id="more"></span><img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/image-20220509112058574.png"></li><li>库<img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/image-20220509112130589.png"></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保存截图地址</span></span><br><span class="line">save_path = <span class="string">&#x27;E:\\0\\autoimg\\&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义摄像头对象，其参数0表示第一个摄像头</span></span><br><span class="line">camera = cv2.VideoCapture(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># camera = cv2.VideoCapture(0)</span></span><br><span class="line"><span class="comment"># camera = cv2.VideoCapture(0, cv2.CAP_DSHOW)</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 判断视频是否打开</span></span><br><span class="line"><span class="keyword">if</span> (camera.isOpened()):</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;Open&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;摄像头未打开&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 测试用,查看视频size</span></span><br><span class="line">size = (<span class="built_in">int</span>(camera.get(cv2.CAP_PROP_FRAME_WIDTH)),</span><br><span class="line">  <span class="built_in">int</span>(camera.get(cv2.CAP_PROP_FRAME_HEIGHT)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;size:&#x27;</span>+<span class="built_in">repr</span>(size))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 帧率</span></span><br><span class="line">fps = <span class="number">30</span></span><br><span class="line"><span class="comment"># 总是取前一帧做为背景（不用考虑环境影响）</span></span><br><span class="line">pre_frame = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line"> start = time.time()</span><br><span class="line"> <span class="comment"># 读取视频流</span></span><br><span class="line"> ret, frame = camera.read()</span><br><span class="line"> <span class="comment"># 转灰度图</span></span><br><span class="line"> gray_lwpCV = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">  <span class="keyword">break</span></span><br><span class="line"> end = time.time()</span><br><span class="line"> </span><br><span class="line"> cv2.imshow(<span class="string">&quot;capture&quot;</span>, frame)</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 运动检测部分</span></span><br><span class="line"> seconds = end - start</span><br><span class="line"> <span class="keyword">if</span> seconds &lt; <span class="number">1.0</span> / fps:</span><br><span class="line">  time.sleep(<span class="number">1.0</span> / fps - seconds)</span><br><span class="line"> gray_lwpCV = cv2.resize(gray_lwpCV, (<span class="number">500</span>, <span class="number">500</span>))</span><br><span class="line"> <span class="comment"># 用高斯滤波进行模糊处理</span></span><br><span class="line"> gray_lwpCV = cv2.GaussianBlur(gray_lwpCV, (<span class="number">21</span>, <span class="number">21</span>), <span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 如果没有背景图像就将当前帧当作背景图片</span></span><br><span class="line"> <span class="keyword">if</span> pre_frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">  pre_frame = gray_lwpCV</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># absdiff把两幅图的差的绝对值输出到另一幅图上面来</span></span><br><span class="line">  img_delta = cv2.absdiff(pre_frame, gray_lwpCV)</span><br><span class="line">  <span class="comment">#threshold阈值函数(原图像应该是灰度图,对像素值进行分类的阈值,当像素值高于（有时是小于）阈值时应该被赋予的新的像素值,阈值方法)</span></span><br><span class="line">  thresh = cv2.threshold(img_delta, <span class="number">25</span>, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">  <span class="comment"># 膨胀图像</span></span><br><span class="line">  thresh = cv2.dilate(thresh, <span class="literal">None</span>, iterations=<span class="number">2</span>)</span><br><span class="line">  <span class="comment"># findContours检测物体轮廓(寻找轮廓的图像,轮廓的检索模式,轮廓的近似办法)</span></span><br><span class="line">  contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">  <span class="comment"># image, contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span></span><br><span class="line">  <span class="keyword">for</span> c <span class="keyword">in</span> contours:</span><br><span class="line">   <span class="comment"># 设置敏感度</span></span><br><span class="line">   <span class="comment"># contourArea计算轮廓面积</span></span><br><span class="line">   <span class="keyword">if</span> cv2.contourArea(c) &lt; <span class="number">1000</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># print(&quot;出现目标物，请求核实&quot;)</span></span><br><span class="line">    <span class="comment"># # 保存图像</span></span><br><span class="line">    <span class="comment"># cv2.imwrite(save_path + str(time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;,time.localtime(time.time()))) + &#x27;.jpg&#x27;, frame)</span></span><br><span class="line">    <span class="comment"># print(&quot;抓拍1&quot;)</span></span><br><span class="line"></span><br><span class="line">    cv2.imwrite(save_path + <span class="built_in">str</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %H_%M_%S&#x27;</span>,time.localtime(time.time()))) + <span class="string">&quot;.jpg&quot;</span>, frame)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;抓拍2&quot;</span> + <span class="built_in">str</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %H_%M_%S&#x27;</span>,time.localtime(time.time()))))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  pre_frame = gray_lwpCV</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line">   <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># release()释放摄像头</span></span><br><span class="line">camera.release()</span><br><span class="line"><span class="comment">#destroyAllWindows()关闭所有图像窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><ul><li>运行窗口<img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/image-20220509112827819.png"></li><li>命令行输出<img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/image-20220509112849910.png"></li><li>抓拍截图<img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E5%8A%A8%E6%80%81%E6%8A%93%E6%8B%8D/image-20220509113110478.png"></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;运动抓拍&quot;&gt;&lt;a href=&quot;#运动抓拍&quot; class=&quot;headerlink&quot; title=&quot;运动抓拍&quot;&gt;&lt;/a&gt;运动抓拍&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Python  3.10.4&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://www.szjm.online/categories/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/categories/Python/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Python" scheme="https://www.szjm.online/tags/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>调用电脑摄像头</title>
    <link href="https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    <id>https://www.szjm.online/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/</id>
    <published>2022-05-09T03:04:19.000Z</published>
    <updated>2022-08-15T02:54:29.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调用电脑摄像头"><a href="#调用电脑摄像头" class="headerlink" title="调用电脑摄像头"></a>调用电脑摄像头</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Python  3.10.4<span id="more"></span><img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/image-20220509112058574.png"></li><li>库<img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/image-20220509112130589.png"></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">cap = cv2.VideoCapture(<span class="number">1</span>) <span class="comment">#设置摄像头 0是默认的摄像头 如果你有多个摄像头的话呢，可以设置1,2,3....</span></span><br><span class="line"><span class="comment"># cap = cv2.VideoCapture(0) #设置摄像头 0是默认的摄像头 如果你有多个摄像头的话呢，可以设置1,2,3....</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:   <span class="comment">#进入无限循环</span></span><br><span class="line">ret,frame = cap.read() <span class="comment">#将摄像头拍到的图像作为frame值</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;frame&#x27;</span>,frame) <span class="comment">#将frame的值显示出来 有两个参数 前一个是窗口名字，后面是值</span></span><br><span class="line">c = cv2.waitKey(<span class="number">1</span>) <span class="comment">#判断退出的条件 当按下&#x27;Q&#x27;键的时候呢，就退出</span></span><br><span class="line"><span class="keyword">if</span> c == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">cap.release()  <span class="comment">#常规操作</span></span><br><span class="line">cv2.DestroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><img src="/2022/05/09/Python%E5%B0%8F%E5%B7%A5%E5%85%B7/%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/image-20220509112552791.png">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;调用电脑摄像头&quot;&gt;&lt;a href=&quot;#调用电脑摄像头&quot; class=&quot;headerlink&quot; title=&quot;调用电脑摄像头&quot;&gt;&lt;/a&gt;调用电脑摄像头&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Python  3.10.4&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://www.szjm.online/categories/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/categories/Python/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Python" scheme="https://www.szjm.online/tags/Python/"/>
    
    <category term="小工具" scheme="https://www.szjm.online/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>什么是继承</title>
    <link href="https://www.szjm.online/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A109_%E4%BB%80%E4%B9%88%E6%98%AF%E7%BB%A7%E6%89%BF/"/>
    <id>https://www.szjm.online/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A109_%E4%BB%80%E4%B9%88%E6%98%AF%E7%BB%A7%E6%89%BF/</id>
    <published>2022-04-16T15:12:44.000Z</published>
    <updated>2022-08-15T11:06:50.166Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是继承"><a href="#什么是继承" class="headerlink" title="什么是继承"></a>什么是继承</h3><ul><li>继承的本质是对某-批类的抽象，从而实现对现实世界更好的建模。</li><li><strong>extends</strong>的意思是“扩展”。子类是父类的扩展。</li><li>JAVA中类只有单继承，没有多继承！</li><li>继承是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等。</li><li>继承关系的俩个类，一个为子类(派生类),一个为父类(基类)。 子类继承父类，,使用关键字extends来表示。</li><li>子类和父类之间，从意义上讲应该具有**”is a”**的关系.</li></ul><span id="more"></span><ul><li>object类</li><li>super</li><li>方法重写</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;什么是继承&quot;&gt;&lt;a href=&quot;#什么是继承&quot; class=&quot;headerlink&quot; title=&quot;什么是继承&quot;&gt;&lt;/a&gt;什么是继承&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;继承的本质是对某-批类的抽象，从而实现对现实世界更好的建模。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;extends&lt;/strong&gt;的意思是“扩展”。子类是父类的扩展。&lt;/li&gt;
&lt;li&gt;JAVA中类只有单继承，没有多继承！&lt;/li&gt;
&lt;li&gt;继承是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等。&lt;/li&gt;
&lt;li&gt;继承关系的俩个类，一个为子类(派生类),一个为父类(基类)。 子类继承父类，,使用关键字extends来表示。&lt;/li&gt;
&lt;li&gt;子类和父类之间，从意义上讲应该具有**”is a”**的关系.&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>封装详解</title>
    <link href="https://www.szjm.online/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.szjm.online/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-04-16T14:09:29.000Z</published>
    <updated>2022-08-15T11:07:58.715Z</updated>
    
    <content type="html"><![CDATA[<h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><ul><li><p>该露的露，该藏的藏</p><ul><li>我们程序设计要追求<strong>“高内聚，低耦合”</strong>。<ul><li>高内聚：就是类的内部数据操作细节自己完成，不允许外部干涉。</li><li>低耦合：仅暴露少量的方法给外部使用。<span id="more"></span></li></ul></li></ul></li><li><p>封装(数据的隐藏)</p><ul><li>通常, 应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，这称为信息隐藏。</li></ul></li><li><p>记住这句话就够了：<strong>属性私有，get&#x2F;set</strong></p><p>私有属性直接调用会报错</p></li></ul> <img src="/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/私有属性直接调用会报错.png">  <h4 id="快速生成set-x2F-get方法"><a href="#快速生成set-x2F-get方法" class="headerlink" title="快速生成set&#x2F;get方法"></a>快速生成set&#x2F;get方法</h4><img src="/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/alt+insert.png"><img src="/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/选择需要构造的属性.png"><img src="/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/点击ok生成成功.png"><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li><p>提高数据安全性 保护数据</p></li><li><p>隐藏代码实现细节</p></li><li><p>统一接口</p></li><li><p>提高系统可维护性</p></li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//类 private:私有</span></span><br><span class="line">    <span class="keyword">private</span> String name;    <span class="comment">//    名字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;         <span class="comment">//    学号</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> sex;       <span class="comment">//    性别</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;        <span class="comment">//    年龄</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提供一些可以操作这个属性的方法</span></span><br><span class="line"><span class="comment">//    public 的 get/set方法</span></span><br><span class="line"><span class="comment">//    get 获得数据/属性</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    set 给这个数据设置值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    alt+insert 快速生成get/set方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">char</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line"><span class="comment">//        对于不合法的数据可以在这里做限制</span></span><br><span class="line">        <span class="keyword">if</span> (age &lt; <span class="number">150</span> &amp;&amp; age &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.oop.Demo04.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个项目只存在一个main方法 在Application测试类中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.setName(<span class="string">&quot;SZJM&quot;</span>);</span><br><span class="line">        System.out.println(s1.getName());</span><br><span class="line">        s1.setAge(<span class="number">999</span>);</span><br><span class="line">        System.out.println(s1.getAge());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/16/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A108_%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3/Demo04.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;封装&quot;&gt;&lt;a href=&quot;#封装&quot; class=&quot;headerlink&quot; title=&quot;封装&quot;&gt;&lt;/a&gt;封装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;该露的露，该藏的藏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们程序设计要追求&lt;strong&gt;“高内聚，低耦合”&lt;/strong&gt;。&lt;ul&gt;
&lt;li&gt;高内聚：就是类的内部数据操作细节自己完成，不允许外部干涉。&lt;/li&gt;
&lt;li&gt;低耦合：仅暴露少量的方法给外部使用。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>简单小结类与对象</title>
    <link href="https://www.szjm.online/2022/04/11/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A107_%E7%AE%80%E5%8D%95%E5%B0%8F%E7%BB%93%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
    <id>https://www.szjm.online/2022/04/11/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A107_%E7%AE%80%E5%8D%95%E5%B0%8F%E7%BB%93%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-04-11T01:14:49.000Z</published>
    <updated>2022-04-11T01:15:25.879Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简单小结类与对象"><a href="#简单小结类与对象" class="headerlink" title="简单小结类与对象"></a>简单小结类与对象<span id="more"></span></h3><ol><li>类与对象<ul><li>类是一个模板，抽象；对象是一个具体的实例</li></ul></li><li>方法<ul><li>定义、调用</li></ul></li><li>对应的引用<ul><li>引用类型：基本类型（8个）除了基本类型都可以叫做引用类型</li><li>对象通过引用操作（地址） 栈–&gt;堆</li></ul></li><li>属性 字段field 成员变量<ul><li>默认初始化：<ul><li>数字：<code>0</code> <code>0.0</code></li><li>char：<code>u0000</code></li><li>boolean：<code>false</code></li><li>其他：<code>null</code></li></ul></li><li>修饰符：属性类型 属性名&#x3D; 属性值</li></ul></li><li>对象的创建和使用<ul><li>必须使用<code>new</code>  关键字创造对象，构造器  <code>Person SZJM = new Person();</code></li><li>对象的属性 <code>SZJM.name</code></li><li>对象的方法 <code>SZJM.touchFish()</code></li></ul></li><li>类：<ul><li>静态的属性   属性</li><li>动态的行为   方法</li></ul></li><li>三大特征<ul><li>封装</li><li>继承</li><li>多态</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;简单小结类与对象&quot;&gt;&lt;a href=&quot;#简单小结类与对象&quot; class=&quot;headerlink&quot; title=&quot;简单小结类与对象&quot;&gt;&lt;/a&gt;简单小结类与对象&lt;/h3&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>创建对象内存分析</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A106_%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A106_%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/</id>
    <published>2022-04-10T14:51:07.000Z</published>
    <updated>2022-08-15T11:09:04.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="构造器详解"><a href="#构造器详解" class="headerlink" title="构造器详解"></a>构造器详解</h3><p><strong>栈放变量名，堆放对象</strong><span id="more"></span></p><img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A106_%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/创建对象内存分析.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"><span class="comment">//默认有一个无参构造</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;叫一声&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.oop.Demo03.Pet;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个项目只存在一个main方法 在Application测试类中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Pet</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pet</span>();</span><br><span class="line">        dog.name = <span class="string">&quot;闹闹&quot;</span>;</span><br><span class="line">        dog.age = <span class="number">5</span>;</span><br><span class="line">        dog.shout();</span><br><span class="line"></span><br><span class="line">        System.out.println(dog.name);</span><br><span class="line">        System.out.println(dog.age);</span><br><span class="line"></span><br><span class="line">        <span class="type">Pet</span> <span class="variable">cat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pet</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A106_%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/Demo03.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;构造器详解&quot;&gt;&lt;a href=&quot;#构造器详解&quot; class=&quot;headerlink&quot; title=&quot;构造器详解&quot;&gt;&lt;/a&gt;构造器详解&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;栈放变量名，堆放对象&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>构造器详解</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A105_%E6%9E%84%E9%80%A0%E5%99%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A105_%E6%9E%84%E9%80%A0%E5%99%A8%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-04-10T14:06:22.000Z</published>
    <updated>2022-08-15T11:09:49.656Z</updated>
    
    <content type="html"><![CDATA[<h3 id="构造器详解"><a href="#构造器详解" class="headerlink" title="构造器详解"></a>构造器详解</h3><p><strong>构造器必须要掌握</strong><span id="more"></span></p><p><strong>一个类即使什么都不写 编译时也会存在一个方法</strong></p><ul><li>使用new关键字创建对象</li><li>使用new关键字创建的时候，除了分配内存空间之外，还会给<em>创建好的对象</em>进行默认的初始化<br>以及对类中构造器的调用。</li><li>类中的构造器也称为构造方法，是在进行创建对象的时候必须要调用的。并且构造器有以下俩<br>个特点:<ol><li>必须和类的名字相同</li><li>必须没有返回类型，也不能写void</li></ol></li><li>构造器必须要掌握</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="comment">//    一个类即使什么都不写 编译时也会存在一个方法</span></span><br><span class="line"><span class="comment">//    显示的定义构造器</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    实例化初始值</span></span><br><span class="line"><span class="comment">//    1. 使用new关键字，必须要有构造器</span></span><br><span class="line"><span class="comment">//    2. 构造器一般用来初始化值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;SZJM&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    有参构造 一旦定义了有参构造 无参构造就必须显示定义 此时无参构造必须存在</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"><span class="comment">//一个项目只存在一个main方法 在Application测试类中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        new 实例化一个对象</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(person.name);<span class="comment">//SZJM</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;十早九木&quot;</span>);</span><br><span class="line">        System.out.println(person1.name);<span class="comment">//十早九木</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A105_%E6%9E%84%E9%80%A0%E5%99%A8%E8%AF%A6%E8%A7%A3/Demo02构造器.png"><h4 id="ALT-Enter-快速生成构造器"><a href="#ALT-Enter-快速生成构造器" class="headerlink" title="ALT + Enter 快速生成构造器"></a>ALT + Enter 快速生成构造器</h4><img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A105_%E6%9E%84%E9%80%A0%E5%99%A8%E8%AF%A6%E8%A7%A3/快速生成构造器.png"><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li><p>构造器：</p><ol><li>方法名必须和类名相同</li><li>没有返回值</li></ol></li><li><p>作用：</p><ol><li>new 本质在调用构造方法</li><li>初始化对象的值</li></ol></li><li><p>注意：</p><ol><li>定义有参构造之后，如果想使用无参构造 显示的定义一个无参的构造</li></ol></li><li><p>快捷键</p><ol><li>ALT + Enter 快速生成构造器</li></ol></li><li><p>新</p><ol><li><code>this.</code></li></ol></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;构造器详解&quot;&gt;&lt;a href=&quot;#构造器详解&quot; class=&quot;headerlink&quot; title=&quot;构造器详解&quot;&gt;&lt;/a&gt;构造器详解&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;构造器必须要掌握&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>类与对象的创建</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A104_%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A104_%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA/</id>
    <published>2022-04-10T13:30:51.000Z</published>
    <updated>2022-08-15T11:10:18.364Z</updated>
    
    <content type="html"><![CDATA[<h3 id="类与对象的关系"><a href="#类与对象的关系" class="headerlink" title="类与对象的关系"></a>类与对象的关系</h3><ul><li>类是一种抽象的数据类型，它是对某一类事物整体描述&#x2F;定义，但是并不能代表某一个具体的事物。<span id="more"></span></li><li>动物、植物、手机、电脑…..</li><li>Person类、Pet类、 Car类等，这些类都是用来描述&#x2F;定义某一类具体的事物应该具备的特<br>点和行为</li><li>对象是抽象概念的具体实例<ul><li>张三就是人的一个具体实例，张三家里的旺财就是狗的一个具体实例。</li><li>能够体现出特点，展现出功能的是具体的实例，而不是一个抽象的概念。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="comment">//    属性  （字段)</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;在学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"><span class="comment">//一个项目只存在一个main方法 在Application测试类中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        类是抽象的 需要实例化</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"><span class="comment">//        类实例化之后会返回一个自己的对象</span></span><br><span class="line"><span class="comment">//        student 对象就是一个 Student 类的具体实例</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">Ming</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">Hong</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(Ming.name);</span><br><span class="line">        System.out.println(Ming.age);</span><br><span class="line"></span><br><span class="line">        Ming.name = <span class="string">&quot;小明&quot;</span>;</span><br><span class="line">        Ming.age = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(Ming.name);</span><br><span class="line">        System.out.println(Ming.age);</span><br><span class="line">        System.out.println(<span class="string">&quot;+++++++++++++++&quot;</span>);</span><br><span class="line">        System.out.println(Hong.name);</span><br><span class="line">        System.out.println(Hong.age);</span><br><span class="line"></span><br><span class="line">        Hong.name = <span class="string">&quot;小红&quot;</span>;</span><br><span class="line">        Hong.age = <span class="number">13</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(Hong.name);</span><br><span class="line">        System.out.println(Hong.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A104_%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA/创建应用对象.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;类与对象的关系&quot;&gt;&lt;a href=&quot;#类与对象的关系&quot; class=&quot;headerlink&quot; title=&quot;类与对象的关系&quot;&gt;&lt;/a&gt;类与对象的关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;类是一种抽象的数据类型，它是对某一类事物整体描述&amp;#x2F;定义，但是并不能代表某一个具体的事物。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>回顾方法的调用</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/</id>
    <published>2022-04-10T13:10:16.000Z</published>
    <updated>2022-08-15T11:13:52.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="回顾方法及加深"><a href="#回顾方法及加深" class="headerlink" title="回顾方法及加深"></a>回顾方法及加深</h3><ul><li><p>方法的调用 <span id="more"></span></p><ul><li><p>静态方法</p></li><li><p>非静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    静态方法 static 直接通过类名调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    非静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        Student.say1();</span></span><br><span class="line">        Student.say2();</span><br><span class="line"><span class="comment">//        实例化这个类 new</span></span><br><span class="line"><span class="comment">//        new Student().say1(); 或者</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.say1();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    static 和类一起加载 调用此时还不存在的非静态类报错</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">()</span>&#123;</span><br><span class="line">        b();</span><br><span class="line"><span class="comment">//        c();</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">()</span>&#123;</span><br><span class="line">        a();</span><br><span class="line"><span class="comment">//        c();</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    类实例化之后才存在</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">c</span><span class="params">()</span>&#123;</span><br><span class="line">        a();</span><br><span class="line">        b();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"><span class="comment">//Student类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我在办公室就听到你们说话了&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;整个楼道就你们班有人说话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">say2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我在办公室就听到你们说话了&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;整个楼道就你们班有人说话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>  <img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/静态类与非静态类.png">  <ul><li><p>形参和实参 (形参和实参的类型要对应)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        形参和实参的类型要对应</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Demo03</span>().add1(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">        System.out.println(add2(<span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add1</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>  <img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/Demo03.png">  <ul><li><p>值传递和引用传递</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        change(a);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        a = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>  <img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/Demo04值传递.png">    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"><span class="comment">//引用传递 传递对象 本质还是值传递</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(person.age);<span class="comment">//0</span></span><br><span class="line">        change(person);</span><br><span class="line">        System.out.println(person.age);<span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(Person person)</span>&#123;</span><br><span class="line">        <span class="comment">//        person这个对象 指定了这个对象 具体的值 可以改变</span></span><br><span class="line">        person.age = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个Person类 有一个属性name</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    String name;<span class="comment">//默认值null</span></span><br><span class="line">    <span class="type">int</span> age;<span class="comment">//默认值0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <img src="/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A103_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8/Demo05引用传递.png">  <ul><li>this关键字</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;回顾方法及加深&quot;&gt;&lt;a href=&quot;#回顾方法及加深&quot; class=&quot;headerlink&quot; title=&quot;回顾方法及加深&quot;&gt;&lt;/a&gt;回顾方法及加深&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法的调用&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>回顾方法的定义</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A102_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A102_%E5%9B%9E%E9%A1%BE%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89/</id>
    <published>2022-04-10T11:59:14.000Z</published>
    <updated>2022-04-10T12:02:23.663Z</updated>
    
    <content type="html"><![CDATA[<h3 id="回顾方法及加深"><a href="#回顾方法及加深" class="headerlink" title="回顾方法及加深"></a>回顾方法及加深</h3><ul><li><p>方法的定义 <span id="more"></span></p><ul><li>修饰符</li><li>返回类型</li><li>break （跳出switch 结束整个循环） 和return （结束方法）的区别</li><li>方法名 （注意规范 驼峰命名 见名知意）</li><li>参数列表 （参数类型 参数命名规范 可变参数…）</li><li>异常抛出  （数组下标越界 <code>ArrayIndexOutOfBoundsException</code>）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Demo01 就是类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    main 方法 程序入口 一个程序只有一个main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    修饰符 返回符类型 方法名 (参数)&#123;</span></span><br><span class="line"><span class="comment">        方法体</span></span><br><span class="line"><span class="comment">        return 返回值;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printHello</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;<span class="comment">//void 可以不写return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b;<span class="comment">//三元运算</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    数组下标越界 ArrayIndexOutOfBoundsException</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readFile</span><span class="params">(String file)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;回顾方法及加深&quot;&gt;&lt;a href=&quot;#回顾方法及加深&quot; class=&quot;headerlink&quot; title=&quot;回顾方法及加深&quot;&gt;&lt;/a&gt;回顾方法及加深&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法的定义&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>什么是面向对象</title>
    <link href="https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A101_%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>https://www.szjm.online/2022/04/10/JAVA/06%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A101_%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-04-10T11:39:40.000Z</published>
    <updated>2022-04-10T11:55:09.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><blockquote><p>Java的核心思想就是OOP<span id="more"></span></p></blockquote><h3 id="面向过程-amp-面向对象"><a href="#面向过程-amp-面向对象" class="headerlink" title="面向过程&amp;面向对象"></a>面向过程&amp;面向对象</h3><ul><li>面向过程思想<ul><li>步骤清晰简单，第一步做什么,第二步做什么…</li><li>面对过程适合处理一些较为简单的问题</li></ul></li><li>面向对象思想<ul><li>物以类聚，<strong>分类</strong>的思维模式，思考问题首先会解决问题需要哪些分类,然后对这些分类进<br>行单独思考。最后，才对某个分类下的细节进行面向过程的思索。</li><li>面向对象适合处理复杂的问题，适合处理需要多人协作的问题!</li></ul></li><li><strong>对于描述复杂的事物，为了从宏观上把握、从整体上合理分析，我们需要使用面向对象的思路来分析整个系统。但是，具体到微观操作，仍然需要面向过程的思路去处理。</strong></li></ul><h2 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h2><ul><li>面向对象编程(Object-Oriented Programming, OOP)</li><li>面向对象编程的本质就是：<strong>以类的方式组织代码，以对象的组织(封装)数据。</strong></li><li>抽象（把像的抽出来）</li><li>三大特性:<ul><li><strong>封装</strong> 包装成一个</li><li><strong>继承</strong> 父亲有的儿子也有</li><li><strong>多态</strong> 有不同 小明小红一起学习 学的一样 但是学出来的不一样</li></ul></li><li>从认识论角度考虑是先有对象后有类。对象，是具体的事物。类，是抽象的，是对<strong>对象</strong>的抽象</li><li>从代码运行角度考虑是先有类后有对象。类是对象的模板。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Java的核心思想就是OOP&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java面向对象" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="面向对象" scheme="https://www.szjm.online/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>稀疏数组</title>
    <link href="https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8409_%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8409_%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</id>
    <published>2022-04-09T06:33:30.000Z</published>
    <updated>2022-08-15T11:15:45.633Z</updated>
    
    <content type="html"><![CDATA[<h3 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h3><blockquote><p>需求:编写五子棋游戏中，有存盘退出和续上盘的功能 <span id="more"></span></p></blockquote><img src="/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8409_%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/使用二维数组记录棋盘.png"><p>因为该二维数组的很多值是默认值0，因此记录了很多没有意义的数据。</p><ul><li>当一个数组中大部分元素为0,或者为同一值的数组时，可以使用稀疏数组来保存该数组</li><li>稀疏数组的处理方式是:<ul><li>记录数组一共有几行几列，有多少个不同值</li><li>把具有不同值的元素和行列及值记录在一个小规模的数组中，从而缩小程序的规模</li></ul></li><li>如下图:左边是原始数组，右边是稀疏数组</li></ul><img src="/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8409_%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/稀疏数组记录示例.png"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.szjm.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        1.创建一个二维数组 11*11 0 空 1 黑 2 白</span></span><br><span class="line">        <span class="type">int</span>[][] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array[<span class="number">5</span>][<span class="number">5</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">4</span>][<span class="number">6</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//        输出原始数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;原始&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints)&#123;</span><br><span class="line">                System.out.print(anInt + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        转换为稀疏数组保存</span></span><br><span class="line"><span class="comment">//        1.有效值的个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    sum ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;有效值的个数&quot;</span> + sum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        2.创建一个稀疏数组的数组</span></span><br><span class="line">        <span class="type">int</span>[][] SparseArray = <span class="keyword">new</span> <span class="title class_">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        SparseArray[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        SparseArray[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        SparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        3.遍历二维数组 将非0值存放到稀疏数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    count ++;</span><br><span class="line">                    SparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    SparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    SparseArray[count][<span class="number">2</span>] = array[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        4.输出稀疏数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;稀疏数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; SparseArray.length; i++) &#123;</span><br><span class="line">            System.out.println(SparseArray[i][<span class="number">0</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                             + SparseArray[i][<span class="number">1</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                             + SparseArray[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        5.还原</span></span><br><span class="line">        System.out.println(<span class="string">&quot;还原&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[][] restore = <span class="keyword">new</span> <span class="title class_">int</span>[SparseArray[<span class="number">0</span>][<span class="number">0</span>]][SparseArray[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; SparseArray.length; i++) &#123;</span><br><span class="line">            restore[SparseArray[i][<span class="number">0</span>]][SparseArray[i][<span class="number">1</span>]] = SparseArray[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//        6.输出还原数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出还原数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; SparseArray[<span class="number">0</span>][<span class="number">0</span>]; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; SparseArray[<span class="number">0</span>][<span class="number">1</span>]; j++) &#123;</span><br><span class="line">                System.out.print(restore[i][j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8409_%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/Demo08.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;稀疏数组&quot;&gt;&lt;a href=&quot;#稀疏数组&quot; class=&quot;headerlink&quot; title=&quot;稀疏数组&quot;&gt;&lt;/a&gt;稀疏数组&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;需求:编写五子棋游戏中，有存盘退出和续上盘的功能&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java数组" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E6%95%B0%E7%BB%84/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="数组" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="数组" scheme="https://www.szjm.online/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序</title>
    <link href="https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8408_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8408_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</id>
    <published>2022-04-09T03:07:55.000Z</published>
    <updated>2022-08-15T11:16:14.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><ol><li><p>比较数组中两个相邻元素 如果a&gt;b 交换位置</p></li><li><p>每次比较都会产生出最大或最小的数字 下一轮少一次排序<span id="more"></span></p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.szjm.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">        sort(array);</span><br><span class="line">        System.out.println(<span class="string">&quot;+++++++++++++++++&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[] array1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">        sortkuang(array1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] array)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//        判断需要循环多少次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (array[i] &lt; array[j])&#123;</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[i];</span><br><span class="line">                    array[i] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(array));</span><br><span class="line">        System.out.println(<span class="string">&quot;count&quot;</span> + count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sortkuang</span><span class="params">(<span class="type">int</span>[] array)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length - i - <span class="number">1</span>;j++) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (array[j+<span class="number">1</span>] &gt; array[j])&#123;</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                    array[j+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(array));</span><br><span class="line">        System.out.println(<span class="string">&quot;count&quot;</span> + count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">exchange</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        a += b;</span><br><span class="line">        b = a - b;</span><br><span class="line">        a -= b;</span><br><span class="line">        System.out.println(a + <span class="string">&quot;+&quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8408_%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/Demo07冒泡排序.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;比较数组中两个相邻元素 如果a&amp;gt;b 交换位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每次比较都会产生出最大或最小的数字 下一轮少一次排序&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java数组" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E6%95%B0%E7%BB%84/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="数组" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="数组" scheme="https://www.szjm.online/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Arrays类详解</title>
    <link href="https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8407_Arrays%E7%B1%BB%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.szjm.online/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8407_Arrays%E7%B1%BB%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-04-09T02:25:58.000Z</published>
    <updated>2022-08-15T11:16:38.086Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h3><ul><li>数组的工具类<code>java.util.Arrays</code><span id="more"></span></li><li>由于数组对象本身并没有什么方法可以供我们调用,但API中提供了一个工具类<code>Arrays</code>供我们使<br>用,从而可以对数据对象进行一些基本的操作。</li><li>查看JDK帮助文档</li><li><code>Arrays</code>类中的方法都是<code>static</code>修饰的静态方法,在使用的时候可以直接使用类名进行调用,而”不<br>用”使用对象来调用(注意:是”不用”而不是”不能”)</li><li>具有以下常用功能:<ul><li>给数组赋值:通过<code>fill</code>方法</li><li>对数组排序:通过<code>sort</code>方法,按升序。</li><li>比较数组:通过<code>equals</code>方法比较数组中元素值是否相等</li><li>查找数组元素: 通过<code>binarySearch</code>方法能对排序好的数组进行二分查找法操作。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.szjm.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = &#123;<span class="number">1</span>, <span class="number">456</span>, <span class="number">75</span>, <span class="number">7896</span>, <span class="number">4567</span>, <span class="number">7641</span>, <span class="number">15</span>, <span class="number">64</span>, <span class="number">73</span>, <span class="number">731</span>, <span class="number">8317</span> , <span class="number">46843</span>, <span class="number">47</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        打印数组元素 Arrays.toString</span></span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"><span class="comment">//        造轮子输出</span></span><br><span class="line">        printArray(a);</span><br><span class="line"><span class="comment">//        排序 升序</span></span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"><span class="comment">//        填充</span></span><br><span class="line">        Arrays.fill(a, <span class="number">0</span>);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"><span class="comment">//        填充 范围</span></span><br><span class="line">        Arrays.fill(a, <span class="number">2</span>, <span class="number">6</span>,<span class="number">1</span>);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] a)</span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            System.out.print(a[i]);</span><br><span class="line">            <span class="keyword">if</span> (i != a.length - <span class="number">1</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/09/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8407_Arrays%E7%B1%BB%E8%AF%A6%E8%A7%A3/Demo06.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Arrays类&quot;&gt;&lt;a href=&quot;#Arrays类&quot; class=&quot;headerlink&quot; title=&quot;Arrays类&quot;&gt;&lt;/a&gt;Arrays类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;数组的工具类&lt;code&gt;java.util.Arrays&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java数组" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E6%95%B0%E7%BB%84/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="数组" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="数组" scheme="https://www.szjm.online/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>二维数组</title>
    <link href="https://www.szjm.online/2022/04/08/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8406_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    <id>https://www.szjm.online/2022/04/08/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8406_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</id>
    <published>2022-04-08T08:16:28.000Z</published>
    <updated>2022-08-15T11:17:03.964Z</updated>
    
    <content type="html"><![CDATA[<h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><ul><li>多维数组可以看成是数组的数组，比如二维数组就是一 个特殊的一维数组，其每一个元素都是<br>一个一维数组。<span id="more"></span></li></ul><img src="/2022/04/08/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8406_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/多维数组.png"><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] array = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="type">int</span>[][] array = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">4</span>][<span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>以上二维数组可以看成四行两列的数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,<span class="number">2</span>  array[<span class="number">0</span>]</span><br><span class="line"><span class="number">2</span>,<span class="number">3</span>  array[<span class="number">1</span>]</span><br><span class="line"><span class="number">3</span>,<span class="number">4</span>  array[<span class="number">2</span>]</span><br><span class="line"><span class="number">4</span>,<span class="number">5</span>  array[<span class="number">3</span>]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.szjm.array;</span><br><span class="line"><span class="keyword">import</span> com.szjm.array.ArrayDemo04;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] array = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(array[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++&quot;</span>);</span><br><span class="line">        ArrayDemo04.printArray(array[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++&quot;</span>);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++&quot;</span>);</span><br><span class="line">        System.out.println(array.length);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>].length);</span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++&quot;</span>);</span><br><span class="line">        printArray2(array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray2</span><span class="params">(<span class="type">int</span>[][] arrays)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arrays[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arrays[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/04/08/JAVA/05%E6%95%B0%E7%BB%84/Java%E6%95%B0%E7%BB%8406_%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/Demo05.png">]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;多维数组&quot;&gt;&lt;a href=&quot;#多维数组&quot; class=&quot;headerlink&quot; title=&quot;多维数组&quot;&gt;&lt;/a&gt;多维数组&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;多维数组可以看成是数组的数组，比如二维数组就是一 个特殊的一维数组，其每一个元素都是&lt;br&gt;一个一维数组。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="狂神" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="狂神说Java" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/"/>
    
    <category term="Java零基础学习视频通俗易懂" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/"/>
    
    <category term="Java数组" scheme="https://www.szjm.online/categories/%E7%8B%82%E7%A5%9E/%E7%8B%82%E7%A5%9E%E8%AF%B4Java/Java%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E8%A7%86%E9%A2%91%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82/Java%E6%95%B0%E7%BB%84/"/>
    
    <category term="自学" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Java" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/"/>
    
    <category term="数组" scheme="https://www.szjm.online/categories/%E8%87%AA%E5%AD%A6/Java/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="Java" scheme="https://www.szjm.online/tags/Java/"/>
    
    <category term="狂神" scheme="https://www.szjm.online/tags/%E7%8B%82%E7%A5%9E/"/>
    
    <category term="数组" scheme="https://www.szjm.online/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
</feed>
